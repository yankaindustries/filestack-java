buildscript {
    ext.kotlin_version = '1.2.71'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8'

    }
}
plugins {
    id 'com.github.kt3k.coveralls' version '2.6.3'
    id 'com.jfrog.bintray' version '1.8.4'
}

apply plugin: 'checkstyle'
apply plugin: 'kotlin'
apply plugin: 'jacoco'
apply plugin: 'java-library'
apply plugin: 'de.fuerstenau.buildconfig'
apply plugin: 'maven'
apply plugin: 'maven-publish'

group = 'com.filestack'
sourceCompatibility = 1.8
version = file(new File('VERSION')).text.trim() // Get version string from VERSION text file

dependencies {
    compile 'com.squareup.okhttp3:okhttp:3.11.0'
    compile 'com.google.code.gson:gson:2.8.5'
    compile 'io.reactivex.rxjava2:rxjava:2.1.2'

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.19.0'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.11.0'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC2'
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

}

// Add generated build-config directories to the main source set, so that the
// IDE doesn't complain when the app references BuildConfig classes
//sourceSets.main.java {
//    srcDir new File(buildDir, 'gen/buildconfig')
//}

buildConfig {
    version = project.version // sets value of VERSION field,
    clsName = 'FilestackBuildConfig'
    packageName = project.group
}

javadoc {
    destinationDir new File("./docs")
    options.optionFiles(new File('./config/javadoc/javadoc.txt'))
}

// Publications define artifacts to upload to Bintray
publishing {
    publications {
        Maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

repositories {
    jcenter()
}


// Create javadoc artifact jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Create source artifact jar
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

tasks.withType(Test) { // Put unit and integration test reports in separate directories
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

// *************************************** Plugin Config ******************************************

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser')
            : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey')
            : System.getenv('BINTRAY_API_KEY')
    publications = ['Maven']
    publish = true
    pkg {
        repo = 'maven'
        userOrg = 'filestack'
        name = 'filestack-java'
        desc = 'Official Java SDK for Filestack.'

        publicDownloadNumbers = true
        licenses = ['Apache-2.0']

        websiteUrl = 'https://filestack.com'
        vcsUrl = 'https://github.com/filestack/filestack-java.git'
        issueTrackerUrl = 'https://github.com/filestack/filestack-java/issues'

        githubRepo = 'filestack/filestack-java'
        githubReleaseNotesFile = 'CHANGELOG.md'

        version {
            name = project.version
            vcsTag = project.version
            released = new Date()
        }
    }
}

checkstyle {
    toolVersion '8.1'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
